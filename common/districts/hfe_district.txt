@base_cost = 300
@city_cost = 500
hfe_district_memorial_city = {
	base_buildtime = 240
	icon = district_city
	is_capped_by_modifier = no
	show_on_uncolonized = {
		uses_district_set = hfe_district_set_pc_memorial
	}
	potential = {
		uses_district_set = hfe_district_set_pc_memorial
	}
	conversion_ratio = 1
	convert_to = {
		district_city
		district_arcology_housing
		district_nexus
		district_hive
	}
	resources = {
		category = planet_districts
		cost = {
			minerals = @base_cost
		}
		upkeep = {
			energy = 2
		}
	}
	triggered_planet_modifier = {
		potential = {
			hfe_trigger_owner_is_gestalt = no
		}
		job_hfe_job_criminal_entertainer_add = 1
	}
	# bonus to police state
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_valid_civic = civic_police_state
			}
		}
		job_enforcer_add = 1
	}
	# basic housing
	planet_modifier = {
		planet_housing_add = 5
	}
	# vanilla housing bonues copy past
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_non_swapped_tradition = tr_prosperity_public_works
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_technology = tech_housing_1
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_technology = tech_housing_2
				NOT = {
					has_valid_civic = civic_agrarian_idyll
				}
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	ai_weight = {
		weight = 1
		modifier = {
			factor = 5
			free_housing < 0
		}
	}
}

hfe_district_memorial_cataloger = {
	base_buildtime = 240
	icon = district_city
	min_for_deposits_on_planet = 1
	max_for_deposits_on_planet = 30
	show_on_uncolonized = {
		uses_district_set = hfe_district_set_pc_memorial
	}
	potential = {
		uses_district_set = hfe_district_set_pc_memorial
	}
	conversion_ratio = 1
	convert_to = {
		district_generator
		district_generator_uncapped
	}
	resources = {
		category = planet_districts
		cost = {
			minerals = @base_cost
		}
		upkeep = {
			energy = 1
		}
	}
	planet_modifier = {
		planet_housing_add = 2
	}
	triggered_planet_modifier = {
		potential = {
			hfe_trigger_owner_is_gestalt = no
		}
		job_hfe_job_cataloger_add = 3
	}
	triggered_planet_modifier = {
		potential = {
			hfe_trigger_owner_is_gestalt = yes
		}
		job_hfe_job_cataloger_gestalt_add = 3
	}
	ai_weight = {
		weight = 2
		modifier = {
			factor = 3
			any_owned_pop = {
				OR = {
					is_unemployed = yes
					has_job = servant
				}
			}
		}
	}
	# this tells the AI that building the building will give it this in a way it doesn't understand. (с) vanilla
	# ai_resource_production = {
	# 	engineering_research = 24
	# 	trigger = {
	# 		always = yes
	# 	}
	# }
}

hfe_district_memorial_recycler = {
	base_buildtime = 240
	icon = district_city
	min_for_deposits_on_planet = 1
	max_for_deposits_on_planet = 30
	show_on_uncolonized = {
		uses_district_set = hfe_district_set_pc_memorial
	}
	potential = {
		uses_district_set = hfe_district_set_pc_memorial
	}
	conversion_ratio = 1
	convert_to = {
		district_mining
		district_mining_uncapped
	}
	resources = {
		category = planet_districts
		cost = {
			minerals = @base_cost
		}
		upkeep = {
			energy = 1
		}
	}
	planet_modifier = {
		planet_housing_add = 2
	}
	triggered_planet_modifier = {
		potential = {
			hfe_trigger_owner_is_gestalt = no
		}
		job_hfe_job_recycler_add = 3
	}
	triggered_planet_modifier = {
		potential = {
			hfe_trigger_owner_is_gestalt = yes
		}
		job_hfe_job_recycler_gestalt_add = 3
	}
	ai_weight = {
		weight = 2
		modifier = {
			factor = 5
			owner = {
				has_deficit = minerals
			}
		}
		modifier = {
			factor = 5
			owner = {
				has_deficit = consumer_goods
			}
		}
		modifier = {
			factor = 5
			owner = {
				has_deficit = alloys
			}
		}
		modifier = {
			factor = 3
			any_owned_pop = {
				OR = {
					is_unemployed = yes
					has_job = servant
				}
			}
		}
	}
	# ai_resource_production = {
	# 	minerals = 9
	# 	consumer_goods = 6
	# 	alloys = 3
	# 	trigger = {
	# 		always = yes
	# 	}
	# }
}
